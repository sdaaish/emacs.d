#+TITLE: My GNU Emacs configuration
#+STARTUP: indent 
#+OPTIONS: H:5 num:nil tags:nil toc:nil timestamps:t
#+LAYOUT: post
#+DESCRIPTION: Loading emacs configuration using org-babel
#+TAGS: emacs
#+CATEGORIES: editing

* Introduction

This is my version of an configuration file for GNU Emacs. The config tries to load needed packages from start, but this doesnt work right out of the box for now. You need to start emacs 3 times before it loads without faults.

#+BEGIN_SRC emacs-lisp
(setq user-full-name "Stig Dahl")
(setq user-mail-address "stig@charlottendal.net")

;;Custom file for customize
(setq custom-file (expand-file-name "custom.el" user-emacs-directory))
(load custom-file 'noerror)
#+END_SRC
* Package handling
Take care of packages needed to enhace emacs.
+ Use-package is useful to load packages from archives more easily. But you need to load that before it is used, and you must ensure that it is installed before you call it.
** Use-package bootstrap
Ensure that use-package is installed, otherwise install it.
#+BEGIN_SRC emacs-lisp
;; Bootstrap `use-package'
;; From http://www.lunaryorn.com/posts/my-emacs-configuration-with-use-package.html
(unless (package-installed-p 'use-package)
  (package-refresh-contents)
  (package-install 'use-package))
#+END_SRC

** Version-dependent
Paradox and magit is depending on 24.4, so load only them if that emacs-version or later is installed.
+ Paradox is package mgmt
+ Magit is a Git-tool
#+BEGIN_SRC emacs-lisp
;; Emacs version above 24.4 needed for these apps
(if (version< emacs-version "24.4")
        (message "is before 24.4")
        (message "Emacs version is `%s'" (emacs-version))
        ;; Package handling trough paradox
        (use-package paradox
          :ensure t
          :defer t)
        ;; Magit for GIT support
        (use-package magit
          :ensure t
          :bind ("C-x g" . magit-status)))
#+END_SRC
** Non-version dependent
These packages works with emacs 24.1 or later, or are not dependent on a specific version.
+ Powershell-mode is useful.
#+BEGIN_SRC 
;; Works with emacs older than 24.4
;; Powershell mode
(use-package powershell
  :ensure t
  :defer t)
#+END_SRC
** Package config
*** Hydra
#+BEGIN_SRC emacs-lisp
;; Hydra keymapping support
(use-package hydra
        :ensure t
        :defer t
        :config
        (defhydra hydra-toggle (:color blue)
      "toggle"
      ("a" abbrev-mode "abbrev")
      ("d" toggle-debug-on-error "debug")
      ("f" auto-fill-mode "fill")
      ("t" toggle-truncate-lines "truncate")
      ("w" whitespace-mode "whitespace")
      ("q" nil "cancel"))
    (global-set-key (kbd "C-c C-v") 'hydra-toggle/body))
#+END_SRC
* Lisp
My own Lisp-files
#+BEGIN_SRC emacs-lisp
;; Local lisp-directory
(when (not (file-exists-p "lisp"))
      (make-directory (concat user-emacs-directory "lisp") t))
(add-to-list 'load-path (concat user-emacs-directory "lisp"))
#+END_SRC
* Keyboard settings
** Set-mark for lxss
Set mark-command for Windows env
#+BEGIN_SRC emacs-lisp
(bind-key "M-SPC" 'set-mark-command)
#+END_SRC
* Theme
#+BEGIN_SRC emacs-lisp
;;Load theme
(load-theme 'deeper-blue)

;; Startup settings
(setq inhibit-splash-screen t
      inhibit-startup-screen t
      initial-scratch-message nil
      initial-major-mode 'org-mode)

;; No menubar or toolbar
(menu-bar-mode -1)
;; Only try this when in gui-mode (tool-bar exists)
(if (functionp 'tool-bar-mode)
 (tool-bar-mode -1))
#+END_SRC
** No beeps
#+BEGIN_SRC emacs-lisp
;;No beep
(setq visible-bell t)
#+END_SRC
** Customisations
#+BEGIN_SRC emacs-lisp
;; Initial settings
(setq-default major-mode 'text-mode)
(line-number-mode t)
(column-number-mode t)
(transient-mark-mode t)
(show-paren-mode 1)
(setq-default line-spacing 1)
(setq tab-width 2
      tab-always-indent t)      ;;Use tabs as indents, 2ch width


;; Newline settings
(setq mode-require-final-newline t)
(setq next-line-add-newlines nil)
(setq require-final-newline t)
#+END_SRC
** Change yes-or-no to y-n
#+BEGIN_SRC emacs-lisp
;; Press y or n for yes or no
(defalias 'yes-or-no-p 'y-or-n-p)
#+END_SRC
** Winner-mode
#+BEGIN_SRC emacs-lisp
(use-package winner
           :ensure t
           :defer t)
#+END_SRC
* Backup
Backup and autosave options, + history
** Backup of files
Saves backup of files in emacs-homedir. Keeps several versions of the files.
#+BEGIN_SRC emacs-lisp
;; From https://github.com/magnars/.emacs.d
;; Write backup files to own directory
(setq backup-directory-alist
      `(("." . ,(expand-file-name
                 (concat user-emacs-directory "backups")))))

;; Make backups of files, even when they're in version control
(setq delete-old-versions -1)
(setq version-control t)
(setq vc-make-backup-files t)
#+END_SRC
** Save current position
Go back to where you last were in the file.
#+BEGIN_SRC emacs-lisp
;; Save point position between sessions
(require 'saveplace)
(setq-default save-place t)
(setq save-place-file (expand-file-name ".places" user-emacs-directory))
#+END_SRC
** Save history
Save a history of edited files.
#+BEGIN_SRC emacs-lisp
;; Save history of files
(setq savehist-file (expand-file-name ".savehist" user-emacs-directory))
(savehist-mode 1)
(setq history-length t)
(setq history-delete-duplicates t)
(setq savehist-save-minibuffer-history 1)
(setq savehist-additional-variables
      '(kill-ring
        search-ring
        regexp-search-ring))

#+END_SRC

* Links
** Manuals
+ http://orgmode.org/manual/ Org mode manual
+ https://www.emacswiki.org/emacs/LoadPath
+ https://www.gnu.org/software/emacs/manual/html_node/
*** Magit manual
+ https://www.emacswiki.org/emacs/Magit
+ https://magit.vc/manual/magit/Getting-started.html
*** Use-package
+ https://github.com/jwiegley/use-package
** Examples
+ https://github.com/eschulte/emacs24-starter-kit.
+ https://github.com/credmp/emacs-config 
+ https://gitlab.com/buildfunthings/emacs-config.
+ https://github.com/magnars/.emacs.d
+ https://gitlab.com/buildfunthings/emacs-config/blob/master/loader.org
+ http://pages.sachachua.com/.emacs.d/Sacha.html#org8fde6ab
+ https://coldnew.github.io/coldnew-emacs/init.el.html
+ http://endlessparentheses.com/new-in-package-el-in-emacs-25-1-user-selected-packages.html
+ http://ergoemacs.org/emacs/emacs_installing_packages.html
+ https://github.com/howardabrams/dot-files/blob/master/emacs.org
+ http://whattheemacsd.com/
+ https://github.com/technomancy/better-defaults
+ http://wenshanren.org/?p=334 Org-mode example
** Videos
+ https://youtu.be/I28jFkpN5Zk
